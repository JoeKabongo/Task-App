[{"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/index.js":"1","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/app.js":"2","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/navBar/navbar.js":"3","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/navBar/style.js":"4","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/task/task.js":"5","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/errorPage/errorPage.js":"6","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/deleteConfirmation/deleteConfirmation.js":"7","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/deleteConfirmation/style.js":"8","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/task/style.js":"9","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/api/index.js":"10","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/key.js":"11","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/signup.js":"12","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/googleLogin.js":"13","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskDetail/taskDetail.js":"14","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/addTaskForm/addTask.js":"15","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskDetail/style.js":"16","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/dateFormat.js":"17","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/login.js":"18","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/style.js":"19","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/alertMessage/alert.js":"20","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskDisplay.js":"21","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskList/taskList.js":"22","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/profile/profile.js":"23","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/profile/style.js":"24","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/resetPassword/resetPassword.js":"25","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/resetPassword/style.js":"26","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/sortBy/sortBy.js":"27","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/category/categorySelection.js":"28","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/category/deleteCategory.js":"29","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/category/style.js":"30","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/filters.js":"31"},{"size":189,"mtime":1611729604372,"results":"32","hashOfConfig":"33"},{"size":3739,"mtime":1612054790812,"results":"34","hashOfConfig":"33"},{"size":3177,"mtime":1612041271604,"results":"35","hashOfConfig":"33"},{"size":0,"mtime":1611358855921,"results":"36","hashOfConfig":"33"},{"size":1927,"mtime":1612664331259,"results":"37","hashOfConfig":"33"},{"size":99,"mtime":1610172565224,"results":"38","hashOfConfig":"33"},{"size":1076,"mtime":1612041202093,"results":"39","hashOfConfig":"33"},{"size":808,"mtime":1612554456190,"results":"40","hashOfConfig":"33"},{"size":207,"mtime":1610324992324,"results":"41","hashOfConfig":"33"},{"size":156,"mtime":1610772394084,"results":"42","hashOfConfig":"33"},{"size":110,"mtime":1610397213761,"results":"43","hashOfConfig":"33"},{"size":4445,"mtime":1615092369018,"results":"44","hashOfConfig":"33"},{"size":844,"mtime":1615094508405,"results":"45","hashOfConfig":"33"},{"size":5340,"mtime":1611537796379,"results":"46","hashOfConfig":"33"},{"size":2349,"mtime":1612392898343,"results":"47","hashOfConfig":"33"},{"size":906,"mtime":1611623657493,"results":"48","hashOfConfig":"33"},{"size":1257,"mtime":1611272690099,"results":"49","hashOfConfig":"33"},{"size":4335,"mtime":1615094278523,"results":"50","hashOfConfig":"33"},{"size":338,"mtime":1611372412012,"results":"51","hashOfConfig":"33"},{"size":601,"mtime":1611791645772,"results":"52","hashOfConfig":"33"},{"size":4911,"mtime":1614561483581,"results":"53","hashOfConfig":"33"},{"size":1889,"mtime":1611536965030,"results":"54","hashOfConfig":"33"},{"size":2497,"mtime":1611984759894,"results":"55","hashOfConfig":"33"},{"size":178,"mtime":1611883683222,"results":"56","hashOfConfig":"33"},{"size":5536,"mtime":1613189001936,"results":"57","hashOfConfig":"33"},{"size":373,"mtime":1612813336049,"results":"58","hashOfConfig":"33"},{"size":2102,"mtime":1613275236632,"results":"59","hashOfConfig":"33"},{"size":3755,"mtime":1613263663934,"results":"60","hashOfConfig":"33"},{"size":2078,"mtime":1613262709813,"results":"61","hashOfConfig":"33"},{"size":906,"mtime":1612554542900,"results":"62","hashOfConfig":"33"},{"size":541,"mtime":1613264080537,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1qx7apa",{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"66"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/index.js",[],["134","135"],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/app.js",["136","137"],"import React, { useEffect, useState, createContext } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from 'react-router-dom';\nimport Cookies from 'js-cookie';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Navbar from '../src/components/navBar/navbar';\nimport TaskDisplay from '../src/components/tasks/taskDisplay';\nimport ErrorPage from '../src/components/errorPage/errorPage';\nimport SignupForm from '../src/components/authentication/signup';\nimport LoginForm from '../src/components/authentication/login';\nimport Profile from '../src/components/profile/profile';\nimport ResetPasswordPage from './components/authentication/resetPassword/resetPassword';\nimport Alert from '../src/components/alertMessage/alert';\n\nexport const AlertMessageContext = createContext();\n\nexport default function App() {\n  const [state, setState] = useState({\n    alert: {\n      messages: [],\n      display: false,\n      type: '',\n    },\n    user: null,\n    isLoading: true,\n  });\n\n  useEffect(() => {\n    const loggedInUser = localStorage.getItem('user');\n    if (loggedInUser) {\n      const foundUser = JSON.parse(loggedInUser);\n      setState({ ...state, user: foundUser, isLoading: false });\n    } else {\n      setState({ ...state, isLoading: false });\n    }\n  }, []);\n\n  const setAlertState = (options) => {\n    setState({ ...state, alert: options });\n  };\n\n  const saveUser = (token, newUser) => {\n    Cookies.set('jwtToken', token);\n    localStorage.setItem('user', JSON.stringify(newUser));\n    setState({ ...state, user: newUser, isLoading: false });\n  };\n\n  const logoutUser = () => {\n    Cookies.remove('jwtToken');\n    localStorage.removeItem('user');\n    setState({ ...state, user: null });\n  };\n\n  if (state.isLoading) {\n    return <CircularProgress />;\n  }\n\n  return (\n    <>\n      <AlertMessageContext.Provider value={setAlertState}>\n        <Router>\n          <Navbar user={state.user} logout={logoutUser} />\n\n          <main style={{ marginLeft: '150px', marginRight: '150px' }}>\n            {state.alert.display && (\n              <Alert\n                alerts={state.alert.messages}\n                type={state.alert.type}\n                setAlertState={setAlertState}\n              />\n            )}\n\n            <Switch>\n              <Route exact path=\"/\">\n                {state.user ? <TaskDisplay /> : <Redirect to=\"signup\" />}\n              </Route>\n\n              <Route exact path=\"/me\">\n                {state.user ? (\n                  <Profile user={state.user} />\n                ) : (\n                  <Redirect to=\"signup\" />\n                )}\n              </Route>\n\n              <Route exact path=\"/signup\">\n                {!state.user ? (\n                  <SignupForm\n                    saveUser={saveUser}\n                    setAlert={setAlertState}\n                    alertDisplayed={state.alert.display}\n                  />\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n\n              <Route exact path=\"/login\">\n                {!state.user ? (\n                  <LoginForm\n                    saveUser={saveUser}\n                    setAlert={setAlertState}\n                    alertDisplayed={state.alert.display}\n                  />\n                ) : (\n                  <Redirect to=\"/\" />\n                )}\n              </Route>\n\n              <Route exact path=\"/resetpassword\">\n                {!state.user ? <ResetPasswordPage /> : <Redirect to=\"/\" />}\n              </Route>\n\n              <Route path=\"*\">\n                <Redirect to=\"/\" />\n              </Route>\n            </Switch>\n          </main>\n        </Router>\n      </AlertMessageContext.Provider>\n    </>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/navBar/navbar.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/navBar/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/task/task.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/errorPage/errorPage.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/deleteConfirmation/deleteConfirmation.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/deleteConfirmation/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/task/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/api/index.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/key.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/signup.js",["138"],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/googleLogin.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskDetail/taskDetail.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/addTaskForm/addTask.js",["139"],"import React, { useState, useContext } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport axios from '../../../api/index';\nimport { AlertMessageContext } from '../../../app';\n\nconst useStyles = makeStyles((theme) => ({\n  // root: {\n  //   '& > *': {\n  //     margin: theme.spacing(1),\n  //   },\n  // },\n}));\n\nexport default function AddTaskForm({ tasks, setTasks, category }) {\n  const setAlertMessage = useContext(AlertMessageContext);\n  const [textValue, setTextValue] = useState('');\n  const classes = useStyles();\n\n  const [task, setTask] = React.useState({\n    name: '',\n    isCompleted: false,\n    dueDate: new Date(),\n    description: ' ',\n    category: '',\n  });\n\n  // update task\n  const handleTaskChange = (name, value) => {\n    const newTask = { ...task, [name]: value };\n    setTask(newTask);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // only update tasks if user entered some text\n    if (textValue) {\n      console.log('here');\n      const newTask = {\n        name: textValue,\n        isCompleted: false,\n        category: category === 'None' ? null : category._id,\n      };\n\n      axios\n        .post('/tasks/create', newTask)\n        .then((res) => {\n          setTasks('tasks', [res.data, ...tasks]);\n          setTextValue('');\n          setAlertMessage({\n            display: true,\n            type: 'success',\n            messages: [`${textValue} was  successfully added to your task`],\n          });\n        })\n        .catch((_) => {\n          setAlertMessage({\n            display: true,\n            type: 'error',\n            messages: ['Could not add task, something went wrong!'],\n          });\n        });\n    }\n  };\n\n  return (\n    <form\n      className={classes.root}\n      noValidate\n      autoComplete=\"off\"\n      onSubmit={handleSubmit}\n    >\n      <TextField\n        id=\"standard-basic\"\n        label=\"Task name\"\n        color=\"primary\"\n        value={textValue}\n        onChange={(e) => setTextValue(e.target.value)}\n        fullWidth\n        required\n      />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        style={{ marginTop: '10px', marginBottom: '10px' }}\n      >\n        Add\n      </Button>\n    </form>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskDetail/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/dateFormat.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/login.js",["140"],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/alertMessage/alert.js",["141"],"import React from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nexport default function Alert(props) {\n  const { alerts, setAlertState, type } = props;\n  React.useEffect(() => {\n    const timer = setTimeout(() => {\n      setAlertState({ display: false });\n    }, 6000);\n    return () => clearTimeout(timer);\n  }, []);\n  return (\n    <div style={{ marginTop: '20px' }}>\n      {alerts.map((alert, index) => (\n        <MuiAlert\n          elevation={0}\n          variant=\"filled\"\n          children={alert}\n          severity={type}\n          key={index}\n        />\n      ))}\n    </div>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskDisplay.js",["142"],"import React, { useState, useEffect, useContext } from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport axios from '../../api/index';\nimport AddTaskForm from './addTaskForm/addTask';\nimport DeleteConfirmation from './deleteConfirmation/deleteConfirmation';\nimport TaskDetail from './taskDetail/taskDetail';\nimport CategorySelection from './filters/category/categorySelection';\nimport TaskList from './taskList/taskList';\nimport Filters from './filters/filters';\nimport { AlertMessageContext } from '../../app';\n\nexport default function TaskDisplay(props) {\n  const showAlertMessage = useContext(AlertMessageContext);\n  const [state, setState] = useState({\n    tasks: [],\n    isLoading: true,\n    showDeleteConfirmation: false,\n    showTaskDetail: false,\n    taskToDelete: null,\n    category: 'None',\n    categoryList: [],\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      // fetch the users tasks\n      try {\n        const requestTasks = await axios.get('/tasks');\n        const requestCategories = await axios.get('/category/all');\n        setState({\n          ...state,\n          tasks: requestTasks.data,\n          isLoading: false,\n          categoryList: requestCategories.data,\n        });\n      } catch (error) {\n        showAlertMessage({\n          display: true,\n          messages: ['Something went wrong'],\n          type: 'error',\n        });\n        setState({ ...state, isLoading: false });\n      }\n    };\n    fetchData();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateState = (name, value) => {\n    setState({ ...state, [name]: value });\n  };\n\n  // change complete status of a task\n  const handleChange = async (taskId) => {\n    const newTasks = state.tasks.map((task) =>\n      task._id === taskId ? { ...task, isCompleted: !task.isCompleted } : task\n    );\n    try {\n      await axios.put(\n        `/tasks/update/${taskId}`,\n        newTasks.find((task) => task._id === taskId)\n      );\n\n      setState({ ...state, tasks: newTasks });\n    } catch (error) {\n      showAlertMessage({\n        display: true,\n        messages: error.response.data.errors,\n        type: 'error',\n      });\n    }\n  };\n\n  // open confirmation delete box\n  const handleDelete = (taskId) => {\n    setState({ ...state, taskToDelete: taskId, showDeleteConfirmation: true });\n  };\n\n  // cancel deletion and close confirmation delete box\n  const cancelDeletion = () => {\n    setState({ ...state, showDeleteConfirmation: false });\n  };\n\n  // delete task\n  const deleteTask = async () => {\n    try {\n      await axios.delete(`/tasks/delete/${state.taskToDelete}`);\n      const newTasks = state.tasks.filter(\n        (task) => task._id !== state.taskToDelete\n      );\n      setState({ ...state, tasks: newTasks, showDeleteConfirmation: false });\n      showAlertMessage({\n        display: true,\n        messages: ['task have been deleted'],\n        type: 'success',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // alert task detail window\n  const toggleDetailWindow = (taskId) => {\n    setState({\n      ...state,\n      showTaskDetail: !state.showTaskDetail,\n      taskToShowId: taskId,\n    });\n  };\n\n  return (\n    <>\n      <section>\n        <div>\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n            }}\n          >\n            <h1>\n              {state.category === 'None' ? 'All' : `${state.category.name}`}{' '}\n              Tasks\n            </h1>\n            <Filters\n              tasks={state.tasks}\n              categoryList={state.categoryList}\n              updateState={updateState}\n              category={state.category}\n            />\n          </div>\n\n          {state.isLoading && <CircularProgress />}\n          {!state.isLoading && (\n            <AddTaskForm\n              setTasks={updateState}\n              tasks={state.tasks}\n              category={state.category}\n            />\n          )}\n\n          <TaskList\n            tasks={state.tasks}\n            category={state.category}\n            onChange={handleChange}\n            handleDelete={handleDelete}\n            toggleDetailWindow={toggleDetailWindow}\n          />\n        </div>\n        <div>\n          <TaskDetail\n            show={state.showTaskDetail}\n            task={state.tasks.find((task) => task._id === state.taskToShowId)}\n            closeDetail={() => toggleDetailWindow(state.taskToShowId)}\n            setTasks={updateState}\n            allTasks={state.tasks}\n            categoryList={state.categoryList}\n          />\n        </div>\n      </section>\n\n      <DeleteConfirmation\n        show={state.showDeleteConfirmation}\n        onCancelDeletion={() => cancelDeletion()}\n        onDelete={() => deleteTask()}\n        task={state.tasks.find((task) => task._id === state.taskToDelete)}\n      />\n    </>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/taskList/taskList.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/profile/profile.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/profile/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/resetPassword/resetPassword.js",["143"],"import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport IconButton from '@material-ui/core/IconButton';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport axios from '../../../api/index';\nimport useStyles from './style';\nimport { Redirect } from 'react-router-dom';\n\nexport default function ResetPassword() {\n  const classes = useStyles();\n\n  const [state, setState] = React.useState({\n    email: '',\n    resetCode: '',\n    password: '',\n    showPassword: false,\n    stage: 0, // 0: Enter email, 1: verify password, 2: enter new password\n    redirect: false,\n  });\n\n  // change a state when a textfield is changed\n  const handleChange = (name) => (event) => {\n    setState({\n      ...state,\n      [name]: event.target.value,\n    });\n  };\n\n  // user submit their email\n  const submitEmail = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post('/auth/resetcode/create', {\n        email: state.email,\n      });\n      setState({ ...state, stage: 1 });\n    } catch (error) {\n      console.log('Something went wrong');\n    }\n  };\n\n  // user submit  passcode\n  const submitPassCode = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post('/auth/resetcode/verify', {\n        email: state.email,\n        code: state.resetCode,\n      });\n      setState({ ...state, stage: 2 });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  // user update their password\n  const submitNewPassword = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.put('/auth/resetpassword', {\n        email: state.email,\n        password: state.password,\n      });\n      setState({ ...state, redirect: true });\n    } catch (error) {\n      console.log(error.response);\n    }\n  };\n\n  // toggle showing character password field\n  const handleClickShowPassword = () => {\n    setState({ ...state, showPassword: !state.showPassword });\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  // user have reset their password\n  if (state.redirect) {\n    return <Redirect to=\"login\" />;\n  }\n  return (\n    <section>\n      <h1> Reset Password</h1>\n\n      <div>\n        <form onSubmit={submitEmail}>\n          <TextField\n            label=\"Email\"\n            variant=\"outlined\"\n            type=\"email\"\n            name=\"email\"\n            required\n            className={clsx(classes.margin, classes.textField)}\n            value={state.email}\n            onChange={handleChange('email')}\n            disabled={state.stage !== 0}\n          />\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={\n              state.stage === 0 ? `${classes.margin}` : `${classes.hide}`\n            }\n            type=\"submit\"\n          >\n            Next\n          </Button>\n        </form>\n      </div>\n\n      <div\n        className={state.stage >= 1 ? `${classes.margin}` : `${classes.hide}`}\n      >\n        <form onSubmit={submitPassCode}>\n          <TextField\n            label=\"Enter code you just received with the email provided\"\n            className={clsx(classes.margin, classes.textField)}\n            variant=\"outlined\"\n            type=\"text\"\n            required\n            FormHelperText=\"whatever agaahaha\"\n            disabled={state.stage !== 1}\n            value={state.resetcode}\n            onChange={handleChange('resetCode')}\n          />\n\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            className={\n              state.stage === 1 ? `${classes.margin}` : `${classes.hide}`\n            }\n            type=\"submit\"\n          >\n            Next\n          </Button>\n        </form>\n      </div>\n\n      <div\n        className={state.stage === 2 ? `${classes.margin}` : `${classes.hide}`}\n      >\n        <form onSubmit={submitNewPassword}>\n          <FormControl\n            className={clsx(classes.margin, classes.textField)}\n            variant=\"outlined\"\n          >\n            <InputLabel htmlFor=\"outlined-adornment-password\" required>\n              New Password\n            </InputLabel>\n            <OutlinedInput\n              id=\"outlined-adornment-password\"\n              type={state.showPassword ? 'text' : 'password'}\n              value={state.password}\n              onChange={handleChange('password')}\n              required\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                    edge=\"end\"\n                  >\n                    {state.showPassword ? <Visibility /> : <VisibilityOff />}\n                  </IconButton>\n                </InputAdornment>\n              }\n              labelWidth={120}\n            />\n          </FormControl>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            style={{ display: 'block' }}\n            type=\"submit\"\n          >\n            Login\n          </Button>\n        </form>\n      </div>\n    </section>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/authentication/resetPassword/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/sortBy/sortBy.js",["144"],"import React, { useState, useEffect } from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nexport default function SortTaskOption(props) {\n  const classes = useStyles();\n  const [options, setOptions] = useState([\n    'Due Date',\n    'Added Date',\n    'Alphabetically',\n  ]);\n  const [tasks, setTasks] = useState([]);\n  const [currentOption, setCurrentOption] = useState('Added Date');\n\n  useEffect(() => {\n    setTasks(props.tasks);\n  }, [props]);\n\n  //uptate sort by filter\n  const handleChange = (event) => {\n    const value = event.target.value;\n    setCurrentOption(value);\n    props.updateState('tasks', sortTasks(value));\n  };\n\n  // sort tasks\n  const sortTasks = (value) => {\n    if (value === 'Alphabetically')\n      return tasks.sort((a, b) => (a.name > b.name ? 1 : -1));\n    else if (value === 'Added Date')\n      return tasks.sort((a, b) => (a.dateCreated > b.dateCreated ? 1 : -1));\n    else if (value === 'Due Date')\n      return tasks.sort((a, b) => {\n        if (!a.dueDate) return 1;\n        if (!b.dueDate) return -1;\n        if (a.dueDate > b.dueDate) return 1;\n        return -1;\n      });\n\n    return tasks;\n  };\n\n  return (\n    <section style={{ display: 'inline-block' }}>\n      <FormControl className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-label\">Sort By</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={currentOption}\n          onChange={handleChange}\n        >\n          {options.map((option) => (\n            <MenuItem value={option} key={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n    </section>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/category/categorySelection.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/category/deleteCategory.js",["145","146"],"import React, { useEffect, useState } from 'react';\nimport useStyles from './style';\nimport axios from '../../../../api/index';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n\nexport default function DeleteCategoryForm(props) {\n  const classes = useStyles();\n  const [catStatus, setCatStatus] = useState([]);\n  const [show, setShow] = useState(false);\n\n  useEffect(() => {\n    setCatStatus(props.categories);\n    setShow(props.show);\n  }, [props]);\n\n  // delete  category\n  const deleteCategory = async (id) => {\n    try {\n      await axios.delete(`category/delete/${id}`);\n\n      props.updateState(\n        'categoryList',\n        props.categories.filter((cat) => cat._id !== id)\n      );\n    } catch (e) {\n      alert('Could not delete, something went wrong');\n    }\n  };\n\n  return (\n    <>\n      <div className={show ? `${classes.cover}` : `${classes.hide}`}></div>\n      <div className={show ? `${classes.root}` : `${classes.hide}`}>\n        <div className={classes.container}>\n          <h1> Select Categories to delete</h1>\n          <p> * This will also delete tasks under that category</p>\n          {catStatus.map((category) => {\n            return (\n              <div>\n                {category.name}\n                <IconButton\n                  aria-label=\"delete\"\n                  onClick={() => deleteCategory(category._id)}\n                >\n                  <DeleteOutlineOutlinedIcon fontSize=\"inherit\" />\n                </IconButton>\n              </div>\n            );\n          })}\n          <div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              // className={classes.margin}\n              onClick={() => props.hideDeleteCategory()}\n            >\n              Close\n            </Button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/category/style.js",[],"/Users/jonathantshimpaka/Documents/myProjects/To-Do-Calendar/client/src/components/tasks/filters/filters.js",[],{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","severity":1,"message":"152","line":13,"column":8,"nodeType":"153","messageId":"154","endLine":13,"endColumn":17},{"ruleId":"155","severity":1,"message":"156","line":41,"column":6,"nodeType":"157","endLine":41,"endColumn":8,"suggestions":"158"},{"ruleId":"151","severity":1,"message":"159","line":12,"column":8,"nodeType":"153","messageId":"154","endLine":12,"endColumn":23},{"ruleId":"151","severity":1,"message":"160","line":31,"column":9,"nodeType":"153","messageId":"154","endLine":31,"endColumn":25},{"ruleId":"151","severity":1,"message":"161","line":15,"column":10,"nodeType":"153","messageId":"154","endLine":15,"endColumn":18},{"ruleId":"155","severity":1,"message":"162","line":11,"column":6,"nodeType":"157","endLine":11,"endColumn":8,"suggestions":"163"},{"ruleId":"151","severity":1,"message":"164","line":7,"column":8,"nodeType":"153","messageId":"154","endLine":7,"endColumn":25},{"ruleId":"151","severity":1,"message":"165","line":69,"column":13,"nodeType":"153","messageId":"154","endLine":69,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":20,"column":19,"nodeType":"153","messageId":"154","endLine":20,"endColumn":29},{"ruleId":"151","severity":1,"message":"167","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":24},{"ruleId":"151","severity":1,"message":"168","line":5,"column":8,"nodeType":"153","messageId":"154","endLine":5,"endColumn":16},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],"no-unused-vars","'ErrorPage' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["171"],"'LoginWithGoogle' is defined but never used.","'handleTaskChange' is assigned a value but never used.","'Redirect' is defined but never used.","React Hook React.useEffect has a missing dependency: 'setAlertState'. Either include it or remove the dependency array.",["172"],"'CategorySelection' is defined but never used.","'response' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [state]",{"range":"177","text":"178"},"Update the dependencies array to be: [setAlertState]",{"range":"179","text":"180"},[1309,1311],"[state]",[324,326],"[setAlertState]"]